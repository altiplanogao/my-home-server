---

- name: Load os depended vars
  include_vars: '{{ item }}'
  with_first_found:
  - files:
      - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
      - '{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml'
      - '{{ ansible_distribution }}.yml'
      - '{{ ansible_os_family }}.yml'
      - 'default.yml'
    paths: '{{ role_path }}/vars/os'

- name: Install the dependence packages
  package: name="{{ item }}" state=present
  with_items: '{{ pkg_set.dependencies }}'

- name: Present samba sharing directory
  file:
    path: '{{ smb_conf.sharing_dir }}'
    owner: '{{ nobody }}'
    group: '{{ nogroup }}'
    state: directory
    mode: 0777

- name: Set samba configure file
  template:
    src: smb.conf.v4
    dest: /etc/samba/smb.conf
    backup: yes

- name: Set samba user account
  # shell: echo -e "{{ smb_conf.init_pwd + '\n' + smb_conf.init_pwd + '\n' }}" | pdbedit -t -a -u {{ dev_user }}
  # shell: echo {{ (ansible_distribution in ['Ubuntu', 'Debian']) | ternary(' ', '-e') }} '{{ smb_conf.init_pwd }}\n{{ smb_conf.init_pwd }}\n' | pdbedit -t -a -u {{ dev_user }}
  shell: printf '{{ smb_conf.init_pwd }}\n{{ smb_conf.init_pwd }}\n' | pdbedit -t -a -u {{ dev_user }}

- name: Restart samba service
  service: name={{ item }} state=started enabled=yes
  with_items: '{{ pkg_set.services }}'

- name: Check service status
  shell: "smbclient -L localhost -U={{ dev_user }}%{{ smb_conf.init_pwd }}"
  become: true
  become_user: "{{ dev_user }}"
  register: smbc_res
  changed_when: False
  failed_when: "( smbc_res | failed ) or ( ('Workzone on Samba' not in smbc_res.stdout ) and (ansible_python_version not in python_v.stdout ) )"
