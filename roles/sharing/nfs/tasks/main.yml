---

- include_vars: '{{ item }}'
  with_first_found:
  - files:
    - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
    - '{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml'
    - '{{ ansible_distribution }}.yml'
    - '{{ ansible_os_family }}.yml'
    - '{{ ansible_pkg_mgr }}.yml'
    - 'default.yml'
    paths: '{{ role_path }}/vars/os'

- name: Install the dependence packages
  package: name="{{ item }}" state=present
  with_items: '{{ pkg_set.dependencies }}'

- name: Present nfs sharing dir
  file:
    path: '{{ nfsdd.path }}'
    owner: "{{ ( nfsdd.owner | default('') | length > 1 ) | ternary(nfsdd.owner, nobody) }}"
    group: "{{ ( nfsdd.group | default('') | length > 1 ) | ternary(nfsdd.group, nogroup) }}"
    state: directory
    mode: '{{ nfsdd.mode }}'
  with_items: '{{ nfs_dirs }}'
  loop_control:
    loop_var: nfsdd
    label: "{{ nfsdd.path }}"

- name: Define exports
  blockinfile:
    path: /etc/exports
    block: |
      {{ nfs_dirs | lines_of_items('$path   $access') }}

- name: Restart nfsserver
  service: name='{{ pkg_set.service }}' state=restarted enabled=yes

- name: Check nfs setting
  raw: "exportfs"
  register: exportfs_o
  failed_when: ( exportfs_o | failed )
  changed_when: false

- name: Check nfs exportfs
  fail:
    msg: "{{ nfsdd.path }} not in exportfs"
  when:  ( nfsdd.path not in exportfs_o.stdout )
  with_items:  '{{ nfs_dirs }}'
  loop_control:
    loop_var: nfsdd
    label: "{{ nfsdd.path }}"
